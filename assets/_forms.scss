// The MIT License (MIT)
//
// Copyright (c) 2015-2017 Yegor Bugayenko
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

@import 'defs';

fieldset {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  legend {
    margin: $em 0;
  }
}

input,
textarea,
select,
button {
  @extend %base-font;
  border-radius: .2 * $em;
  display: inline-block;
  max-width: 100%;
  padding: .55 * $em;

  + label,
  + input[type="checkbox"],
  + input[type="radio"] {
    page-break-before: always;
  }
}

option {
  @extend %base-font;
}

textarea {
  min-height: 5 * $em;
  min-width: 20 * $em;
}

label {
  display: inline-block;
  margin-bottom: .7 * $em;

  + * {
    page-break-before: always;
  }

  > input {
    margin-bottom: 0;
  }
}

input[type="submit"],
input[type="reset"],
button {
  background: $color1l;
  color: lighten($black, 10);
  cursor: pointer;
  display: inline;
  margin-bottom: .5 * $em;
  margin-right: .1 * $em;
  padding: .1 * $em .3 * $em;
  text-align: center;

  &:hover {
    background: $color2d;
    color: $black;
  }

  &[disabled] {
    background: $whited;
    color: $blackl;
    cursor: auto;
  }

}

input[type="submit"],
button[type="submit"] {
  background: $color3;
  color: $white;

  &:hover {
    background: $color2;
    color: $color1;
  }
}

input,
select,
textarea {
  margin-bottom: $em;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="phone"],
input[type="tel"],
input[type="number"],
input[type="datetime"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="color"],
input[type="time"],
input[type="search"],
input[type="range"],
input[type="file"],
input[type="datetime-local"],
select,
textarea {
  border: 1px solid $color1;
  padding: .3 * $em .35 * $em;
}

input[type="checkbox"],
input[type="radio"] {
  flex-grow: 0;
  height: 1.65 * $em;
  margin-left: 0;
  margin-right: .5 * $em;
  vertical-align: middle;

  + label {
    page-break-before: avoid;
  }
}

select[multiple] {
  min-width: 15 * $em;
}

input[type="checkbox"] {
  position: absolute; // take it out of document flow
  opacity: 0; // hide it

  & + label {
    position: relative;
    cursor: pointer;
    padding: 0;
  }

  // Box.
  & + label:before {
    border-radius: .2 * $em;
    content: '';
    margin-right: 0.5 * $em;
    margin-left: 0.5 * $em;
    display: inline-block;
    vertical-align: text-top;
    width: $em;
    height: $em;
    background: $color1l;
  }

  // Box hover
  &:hover + label:before {
    box-shadow: 0 0 0 3px $whited;
  }
  
  // Box focus
  &:focus + label:before {
    box-shadow: 0 0 0 3px $whited;
  }

  // Box checked
  &:checked + label:before {
    background: $color2d;
  }
  
  // Disabled state label.
  &:disabled + label {
    color: $blackl;
    cursor: auto;
  }

  // Disabled box.
  &:disabled + label:before {
    box-shadow: none;
    background: $whited;
  }

  // Checkmark. Could be replaced with an image
  &:checked + label:after {
    content: '';
    position: absolute;
    left: 0.75 * $em;
    top: 9px;
    background: $black;
    width: 2px;
    height: 2px;
    box-shadow: 
      2px 0 0 $black,
      4px 0 0 $black,
      4px -2px 0 $black,
      4px -4px 0 $black,
      4px -6px 0 $black,
      4px -8px 0 $black;
    transform: rotate(45deg);
  }
}

input[type="radio"] {
  position: absolute; // take it out of document flow
  opacity: 0; // hide it

  & + label {
    position: relative;
    cursor: pointer;
    padding: 0;
  }

  // Box.
  & + label:before {
    border-radius: .5 * $em;
    content: '';
    margin-right: 0.5 * $em;
    margin-left: 0.5 * $em;
    display: inline-block;
    vertical-align: text-top;
    width: $em;
    height: $em;
    background: $color1l;
  }

  // Box hover
  &:hover + label:before {
    box-shadow: 0 0 0 3px $whited;
  }
  
  // Box focus
  &:focus + label:before {
    box-shadow: 0 0 0 3px $whited;
  }

  // Box checked
  &:checked + label:before {
    background: $color2d;
  }
  
  // Disabled state label.
  &:disabled + label {
    color: $blackl;
    cursor: auto;
  }

  // Disabled box.
  &:disabled + label:before {
    box-shadow: none;
    background: $whited;
  }

  // Checkmark. Could be replaced with an image
  &:checked + label:after {
    content: '\25CF';
    position: absolute;
    left: 0.75 * $em;
    color: $black;
  }
}